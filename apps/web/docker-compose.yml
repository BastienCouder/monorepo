services:
  # traefik:
  #   image: traefik:v3.0
  #   container_name: traefik
  #   command:
  #     - "--api.dashboard=true"
  #     - "--providers.docker=true"
  #     - "--entrypoints.web.address=:80"
  #     - "--entrypoints.websecure.address=:443"
  #     - "--certificatesresolvers.myresolver.acme.httpchallenge=true"
  #     - "--certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web"
  #     - "--certificatesresolvers.myresolver.acme.email=couderbastien@gmail.com"
  #     - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - "/var/run/docker.sock:/var/run/docker.sock:ro"
  #     - "./acme.json:/letsencrypt/acme.json"
  #   networks:
  #     - traefik

  web:
    build:
      context: ../..
      dockerfile: apps/web/Dockerfile
    container_name: web
    depends_on:
      - postgres
    environment:
      DATABASE_URL: ${DATABASE_URL}
    ports:
      - "3011:3000"
    # labels:
    #   - "traefik.enable=true"
    #   - "traefik.http.routers.web.rule=Host(`web.bastiencouder.com`)"
    #   - "traefik.http.routers.web.entrypoints=websecure"
    #   - "traefik.http.routers.web.tls.certresolver=myresolver"
    #   - "traefik.http.services.web.loadbalancer.server.port=3000"
    # networks:
    #   - traefik

  postgres:
    image: postgres:16-alpine
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
    # networks:
    #   - traefik

volumes:
  postgres_data:

# networks:
#   traefik:
#     external: false